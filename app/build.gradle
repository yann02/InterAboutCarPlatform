apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
def support = rootProject.ext.dependencies
android {
    signingConfigs {
        release {
            File strFile = new File('hnsh.jks')
            storeFile file(strFile)   //使用相对路径
            keyAlias 'hnsh'
            keyPassword 'hnsh@)!('
            storePassword 'hnsh@)!('
        }
    }
    compileSdkVersion 30
    defaultConfig {
        flavorDimensions "ai"
        applicationId "com.hnsh.dialogue"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 100
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            // 配置retrofit baseUrl
            buildConfigField("String", "BASE_URL", "\"http://www.sh.dmonkey.cn/shuanghou/\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            // 配置retrofit baseUrl
            buildConfigField("String", "BASE_URL", "\"http://www.sh.dmonkey.cn/shuanghou/\"")
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'project.properties'
        exclude 'META-INF/speech_release.kotlin_module'
        exclude 'META-INF/translate_release.kotlin_module'
        exclude 'META-INF/speech_v2Release.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        taxi {
            applicationIdSuffix ".taxi"
            manifestPlaceholders = [APP_NAME: "一路通"]
        }
    }

    //修改生成的apk名字
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name.equals('release')) {
                outputFileName = 'dialogue' + '-V' + defaultConfig.versionName + '-' + variant.productFlavors[0].name + '-release' + '.apk'
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation("com.github.bumptech.glide:glide:4.6.1") {
        exclude group: "com.android.support"
    }
    implementation 'com.dosmono.library:ai-model:2.0.4_beta19'
    implementation 'com.dosmono.library:universal:2.0.4_beta01'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.0.0-rc02'
    implementation "org.greenrobot:eventbus:3.0.0"
    implementation("com.jaeger.statusbarutil:library:1.5.1") {
        exclude group: 'com.android.support'
    }
    support.each { k, v -> implementation v }
}
